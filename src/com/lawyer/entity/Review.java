package com.lawyer.entity;

// Generated Aug 7, 2013 11:09:49 PM by Hibernate Tools 3.4.0.CR1

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Review generated by hbm2java
 */
@Entity
@Table(name = "review")
public class Review implements java.io.Serializable {
	private static final long serialVersionUID = 1L;
	private ReviewId id;
	private User user;
	private Document document;
	private Lawyer lawyer;
	private Boolean status;

	public Review() {
	}

	public Review(ReviewId id, User user, Document document, Lawyer lawyer) {
		this.id = id;
		this.user = user;
		this.document = document;
		this.lawyer = lawyer;
	}

	public Review(ReviewId id, User user, Document document, Lawyer lawyer,
			Boolean status) {
		this.id = id;
		this.user = user;
		this.document = document;
		this.lawyer = lawyer;
		this.status = status;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "userId", column = @Column(name = "user_id", nullable = false)),
			@AttributeOverride(name = "lawyerId", column = @Column(name = "lawyer_id", nullable = false)),
			@AttributeOverride(name = "documentId", column = @Column(name = "document_id", nullable = false)) })
	public ReviewId getId() {
		return this.id;
	}

	public void setId(ReviewId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_id", nullable = false, insertable = false, updatable = false)
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "document_id", nullable = false, insertable = false, updatable = false)
	public Document getDocument() {
		return this.document;
	}

	public void setDocument(Document document) {
		this.document = document;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "lawyer_id", nullable = false, insertable = false, updatable = false)
	public Lawyer getLawyer() {
		return this.lawyer;
	}

	public void setLawyer(Lawyer lawyer) {
		this.lawyer = lawyer;
	}

	@Column(name = "status")
	public Boolean getStatus() {
		return this.status;
	}

	public void setStatus(Boolean status) {
		this.status = status;
	}

}
